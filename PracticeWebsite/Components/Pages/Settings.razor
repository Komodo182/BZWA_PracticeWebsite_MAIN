@page "/account-settings"
@using PracticeWebsite.Services
@using PracticeWebsite.Models
@using PracticeWebsite.Utilities
@inject UserSession UserSession
@inject NavigationManager NavigationManager

<MudCard>
    <MudCardMedia Height="300" Image="images/PolarBear(1).jpg"/>
</MudCard>
<MudCard>
    <MudContainer Class="mx-auto pa-6">
        <MudCardHeader>
            <MudGrid Justify="Justify.Center">
                <MudItem xs="12" sm="6" md="12">
                    <MudCard Elevation="25" Class="rounded-lg pb-4">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Align="Align.Center" Typo="Typo.h2">
                                    Account Settings
                                </MudText>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudDivider />
                        <MudCardContent>
                            <MudText Align="Align.Center" Typo="Typo.body2">
                                Here you can modify and personalise your account and view any information we store about you to be fully clear with you.
                            </MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            </MudGrid>
        </MudCardHeader>
        

        @if (UserSession.IsLoggedIn == false)
        {
            <MudGrid Justify="Justify.Center">
                <MudItem xs="12" sm="10" md="10">
                    <MudAlert SEverity="Severity.Error"> Please log in using the button on the top right of the page on the appbar for it to allow for access to settings.</MudAlert>
                </MudItem>
            </MudGrid>
        }
        else
        {
            <MudContainer>
                <MudItem>
                    <MudCard Elevation="0">
                        <MudGrid>
                            <MudItem xs="12" sm="6" md="6">
                                <MudCard Elevation="5" Class="rounded-lg pb-4">
                                    <MudCardHeader>
                                        <CardHeaderContent>
                                            <MudIcon Color="Color.Dark" Class="mx-auto my-auto d-flex align-center" Icon="@Icons.Material.Filled.CardMembership" Style="font-size: 4rem;" />
                                        </CardHeaderContent>
                                    </MudCardHeader>
                                    <MudCardContent>
                                        <MudText Align="Align.Center" Typo="Typo.h6">
                                            Personal User Data
                                        </MudText>
                                        <MudDivider/>
                                        <MudCard Class="mb-4">
                                            <MudCardContent>
                                                <MudGrid>
                                                    <MudItem xs="12" sm="6">
                                                        <MudText Typo="Typo.body1"><strong>Username:</strong> @UserSession.CurrentUsername</MudText>
                                                    </MudItem>
                                                    <MudItem xs="12" sm="6">
                                                        <MudText Typo="Typo.body1"><strong>Email:</strong> @LogInCustomer.Email</MudText>
                                                    </MudItem>
                                                    <MudItem xs="12" sm="6">
                                                        <MudText Typo="Typo.body1"><strong>Post Code:</strong> @LogInCustomer.Postcode</MudText>
                                                    </MudItem>
                                                    <MudItem xs="12" sm="6">
                                                        <MudText Typo="Typo.body1"><strong>Phone Number:</strong> @LogInCustomer.PhoneNumber</MudText>
                                                    </MudItem>
                                                </MudGrid>
                                            </MudCardContent>
                                        </MudCard>
                                    </MudCardContent>
                                </MudCard>
                            </MudItem>

                            <MudItem xs="12" sm="6" md="6">
                                <MudCard Elevation="5" Class="rounded-lg pb-4">
                                    <MudCardHeader>
                                        <CardHeaderContent>
                                            <MudIcon Color="Color.Dark" Class="mx-auto my-auto d-flex align-center" Icon="@Icons.Material.Outlined.ShoppingBag" Style="font-size: 4rem;" />
                                        </CardHeaderContent>
                                    </MudCardHeader>
                                    <MudCardContent>
                                        <MudText Align="Align.Center" Typo="Typo.h6">
                                            Account Security Settings
                                        </MudText>
                                        <MudDivider/>
                                        <MudCard Class="mb-4">
                                            <MudCardContent>
                                                <MudText Typo="Typo.body1">Change your password and manage security settings below.</MudText>
                                                <br />
                                                <MudButton Disabled="true" Variant="Variant.Outlined" Color="Color.Primary" OnClick="NavigateToChangePassword">Change Password</MudButton>
                                            </MudCardContent>
                                        </MudCard>
                                    </MudCardContent>
                                </MudCard>
                            </MudItem>

                            <MudItem xs="12" sm="6" md="8">
                                <MudCard Elevation="5" Class="rounded-lg pb-4">
                                    <MudCardHeader>
                                        <CardHeaderContent>
                                            <MudIcon Color="Color.Dark" Class="mx-auto my-auto d-flex align-center" Icon="@Icons.Material.Outlined.ShoppingBag" Style="font-size: 4rem;" />
                                        </CardHeaderContent>
                                    </MudCardHeader>
                                    <MudCardContent>
                                        <MudText Align="Align.Center" Typo="Typo.h6">
                                            Account Action
                                        </MudText>
                                        <MudDivider />
                                        <MudCard Class="mb-4">
                                            <MudCardContent>
                                                <MudText Typo="Typo.h5">Account Actions</MudText>
                                                <MudDivider Class="my-2" />
                                                <MudButton Disabled = "true" Variant="Variant.Outlined" Color="Color.Error" OnClick="ShowDeleteConfirmation">Delete Account</MudButton>

                                                @if (showDeleteConfirmation)
                                                {
                                                    <MudText Typo="Typo.body2" Color="Color.Error" Class="mt-2">Are you sure you want to delete your account? This action cannot be undone.</MudText>
                                                    <MudGrid Justify="Justify.Center" Class="mt-2">
                                                        <MudItem>
                                                            <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="DeleteAccount">Yes, Delete</MudButton>
                                                            <MudButton Variant="Variant.Outlined" Color="Color.Default" OnClick="CancelDelete">Cancel</MudButton>
                                                        </MudItem>
                                                    </MudGrid>
                                                }
                                            </MudCardContent>
                                        </MudCard>
                                    </MudCardContent>
                                </MudCard>
                            </MudItem>

                        </MudGrid>
                        <MudGrid Justify="Justify.Center">
                            <MudItem>
                                <br />
                                <br />
                                <MudButton Variant="Variant.Filled" Color="Color.Default" OnClick="Logout">Logout</MudButton>
                            </MudItem>
                        </MudGrid>
                    </MudCard>
                </MudItem>
            </MudContainer>
        }
    </MudContainer>
</MudCard>    


@code {
    private Customer LogInCustomer = new Customer();
    private Customer? customer;
    private bool showDeleteConfirmation = false;
    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(200);

        if (UserSession.IsLoggedIn == true)
        {
            // Fetch customer details if logged in
            //customer = await UserService.GetCustomerByUsernameAsync(UserSession.CurrentUsername);
        }
    }

    private void ShowDeleteConfirmation()
    {
        showDeleteConfirmation = true;
    }

    private void CancelDelete()
    {
        showDeleteConfirmation = false;
    }

    private async Task DeleteAccount()
    {
        if (customer != null)
        {
            // Call the delete method from UserService
            //await UserService.DeleteCustomerAsync(customer.Username); // Assuming you have this method implemented
            UserSession.Logout();
            NavigationManager.NavigateTo("/login"); // Redirect to login page after deletion
            Console.WriteLine("Account Deleted");
        }
    }

    private void NavigateToChangePassword()
    {
        NavigationManager.NavigateTo("/");
    }

    private void NavigateToLogin()
    {
        NavigationManager.NavigateTo("/");
    }

    private void Logout()
    {
        UserSession.Logout();
        NavigationManager.NavigateTo("/"); // Redirect to login page
    }

    private bool first = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Get the current page URL (this can be adjusted depending on how you're tracking page URL)
            var currentPageUrl = NavigationManager.Uri.Substring(22);

            // Call the method to track the page view
            //await PageService.TrackPageViewAsync(currentPageUrl);
            first = false;
        }
    }
}
